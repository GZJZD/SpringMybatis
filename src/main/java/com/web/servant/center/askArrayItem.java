// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.web.servant.center;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class askArrayItem {

	@TarsStructProperty(order = 1, isRequire = true)
	public double askPrice = 0D;
	@TarsStructProperty(order = 2, isRequire = true)
	public int askVolume = 0;

	public double getAskPrice() {
		return askPrice;
	}

	public void setAskPrice(double askPrice) {
		this.askPrice = askPrice;
	}

	public int getAskVolume() {
		return askVolume;
	}

	public void setAskVolume(int askVolume) {
		this.askVolume = askVolume;
	}

	public askArrayItem() {
	}

	public askArrayItem(double askPrice, int askVolume) {
		this.askPrice = askPrice;
		this.askVolume = askVolume;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(askPrice);
		result = prime * result + TarsUtil.hashCode(askVolume);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof askArrayItem)) {
			return false;
		}
		askArrayItem other = (askArrayItem) obj;
		return (
			TarsUtil.equals(askPrice, other.askPrice) &&
			TarsUtil.equals(askVolume, other.askVolume) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(askPrice, 1);
		_os.write(askVolume, 2);
	}


	public void readFrom(TarsInputStream _is) {
		this.askPrice = _is.read(askPrice, 1, true);
		this.askVolume = _is.read(askVolume, 2, true);
	}

}
